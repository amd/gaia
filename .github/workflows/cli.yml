# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: Test GAIA CLI

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]
#     types: [opened, synchronize, reopened, ready_for_review]
#   workflow_dispatch:

# permissions:
#   contents: read

# jobs:
#   gaia-cli:
#     runs-on: windows-latest
#     if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Miniconda with 64-bit Python
#         uses: conda-incubator/setup-miniconda@v2
#         with:
#           miniconda-version: "latest"
#           activate-environment: gaia
#           python-version: "3.10"

#       - name: Install dependencies
#         shell: bash -el {0}
#         run: |
#           python -m pip install --upgrade pip
#           conda install pylint
#           pip install -e .
#           python -m pip check

#       - name: Install Ollama
#         shell: cmd
#         run: |
#           curl -L https://ollama.com/download/OllamaSetup.exe -o OllamaSetup.exe --progress-bar
#           echo Ollama download complete. Starting installation.
#           start /wait OllamaSetup.exe /VERYSILENT /SUPPRESSMSGBOXES /SP- /LOG="llama_install.log"
#           echo "Ollama installation log:"
#           type llama_install.log
#           echo "PATH=C:\Users\runneradmin\AppData\Local\Programs\Ollama;%PATH%" >> $GITHUB_ENV
#           del OllamaSetup.exe

#       - name: Verify Ollama Installation
#         shell: cmd
#         run: |
#           if exist "C:\Users\runneradmin\AppData\Local\Programs\Ollama\ollama.exe" (
#               echo "Ollama installed successfully."
#           ) else (
#               echo "Ollama installation failed. Executable not found."
#               exit 1
#           )
#           set PATH=%PATH%;C:\Users\runneradmin\AppData\Local\Programs\Ollama
#           ollama --version

#       - name: Test GAIA CLI
#         shell: bash -el {0}
#         env:
#           HUGGINGFACE_ACCESS_TOKEN: ${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}
#           HF_TOKEN: ${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}
#         run: |
#           python tests/test_gaia_cli.py
