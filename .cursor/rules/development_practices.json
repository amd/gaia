{
  "development_practices": {
    "code_organization": {
      "structure": {
        "gaia": "Core GAIA implementation",
        "gaia/agents": "AI agent implementations including RAG",
        "gaia/llm": "LLM integration and server management",
        "gaia/interface": "UI components and user interaction",
        "tests": "Test suites and test data",
        "docs": "Project documentation",
        ".github/workflows": "CI/CD workflows"
      },
      "naming_conventions": {
        "files": "snake_case.py",
        "classes": "PascalCase",
        "functions": "snake_case",
        "constants": "UPPER_SNAKE_CASE",
        "test_files": "test_*.py"
      }
    },
    "code_quality": {
      "documentation": {
        "required": [
          "Copyright notice and MIT license header",
          "Function/class docstrings",
          "Complex logic explanations",
          "Parameter descriptions",
          "Test case descriptions"
        ]
      },
      "testing": {
        "unit_tests": "Required for new functionality",
        "test_location": "tests/ directory",
        "test_modes": {
          "hybrid": "Test with hybrid backend",
          "ollama": "Test with Ollama backend"
        },
        "server_testing": {
          "startup": "Verify server startup and readiness",
          "cleanup": "Ensure proper server cleanup",
          "timeout": "Handle timeouts appropriately"
        }
      },
      "error_handling": {
        "practices": [
          "Use descriptive error messages",
          "Log errors with appropriate context",
          "Handle cleanup in error cases",
          "Implement proper server shutdown",
          "Handle process termination"
        ]
      }
    },
    "integration": {
      "raux": {
        "separation": "Maintain clear separation between GAIA and RAUX",
        "communication": "Use defined interfaces for GAIA-RAUX interaction",
        "installation": "Support optional RAUX installation"
      },
      "server_management": {
        "hybrid_mode": {
          "startup": "Proper server initialization and PID tracking",
          "monitoring": "Regular server status checks",
          "cleanup": "Clean server shutdown and process termination"
        },
        "ollama_mode": {
          "startup": "Proper Ollama server initialization",
          "monitoring": "Regular server status checks",
          "cleanup": "Clean server shutdown"
        }
      }
    }
  }
} 